#!/usr/bin/env python3
import rospy
import sensor_msgs.point_cloud2 as pc2
from geometry_msgs.msg import PoseStamped
from geometry_msgs.msg import Twist
from sensor_msgs.msg import LaserScan
from laser_geometry import LaserProjection


def callbackPose(msg):
	global estado
	global posX
	position = msg.pose.position
	posX = position.x

	if position.x < 5.5 and estado == 0:
		estado = 1
		motion.linear.x = +0.5
	if position.x > 6.15 and estado == 1:
		estado = 2
		motion.linear.x = -0.3
		motion.angular.z = -0.2
	if position.y >= 1.1 and estado == 2:
		estado = 3
		motion.angular.z = 0.3
	if position.y >= 1.6 and estado == 3:
		estado = 4
		motion.linear.x = 0.15
		motion.angular.z = 0.3
	if position.y <= 1.5 and estado == 4:
		estado = 5
		motion.linear.x = 0
		motion.angular.z = 0
	cmd.publish(motion)


def callbackScan(scan):
	rospy.loginfo("Got scan, projecting")
	point_cloud = laser_projector.projectLaser(scan)
	for p in pc2.read_points(point_cloud, field_names = ("x", "y", "z"), skip_nans=True):
		distY = p[1]
		if distY < 0:
			distY = 0
		#print " x : %f  y: %f  z: %f" %(p[0],p[1],p[2])
		rospy.loginfo("y: %f" %(distY, posX))


cmd = rospy.Publisher("/atrv/motion", Twist, queue_size=10)
pos = rospy.Subscriber("/atrv/pose", PoseStamped, callbackPose)
scan_sub = rospy.Subscriber("/atrv/sick", LaserScan, callbackScan)

estado = 0
posX = 0
laser_projector = LaserProjection()
motion = Twist()

rospy.init_node("cliente")
rospy.spin() # this will block untill you hit Ctrl+C

